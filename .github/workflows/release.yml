name: Build and Release

on:
  push:
    branches: [main]
    paths:
      - "zendesk_app/src/manifest.json"
      - "zendesk_app/manifest.json"

jobs:
  get-version:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: zendesk_app
    outputs:
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: zendesk_app/package-lock.json

      - name: Get version
        id: get_version
        run: |
          VERSION=$(node -p "require('./src/manifest.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

  build:
    needs: get-version
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: zendesk_app
    strategy:
      matrix:
        env: [preview, production]

    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "20.x"
          cache: "npm"
          cache-dependency-path: zendesk_app/package-lock.json

      - name: Install dependencies
        run: npm install

      - name: Install ZCLI
        run: npm i @zendesk/zcli -g

      - name: Build and package ${{ matrix.env }}
        env:
          ZENDESK_API_TOKEN: ${{ secrets.ZENDESK_API_TOKEN }}
          VITE_ZENDESK_API_KEY: "{{setting.zendesk_api_key}}"
        run: |
          rm -rf dist
          npm run build
          zcli apps:package dist
          ZIP_FILE=$(find . -name "app-*.zip" -type f)
          if [ $(echo "$ZIP_FILE" | wc -l) -ne 1 ]; then
            echo "Error: Found multiple or no zip files"
            exit 1
          fi
          mv "$ZIP_FILE" "${{ matrix.env }}.zip"

  create-release:
    needs: [get-version, build]
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}
        with:
          tag_name: v${{ needs.get-version.outputs.version }}
          release_name: Release v${{ needs.get-version.outputs.version }}
          draft: false
          prerelease: false

  upload-assets:
    needs: [create-release, build]
    runs-on: ubuntu-latest
    strategy:
      matrix:
        env: [preview, production]

    steps:
      - name: Upload ${{ matrix.env }}.zip
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ./${{ matrix.env }}.zip
          asset_name: ${{ matrix.env }}.zip
          asset_content_type: application/zip
