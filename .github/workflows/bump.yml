name: Version Bump

on:
  push:
    branches: [main]
    paths-ignore:
      - 'zendesk_app/manifest.json'
      - 'zendesk_app/src/manifest.json'

jobs:
  bump:
    if: contains(github.event.head_commit.message, 'fix') || contains(github.event.head_commit.message, 'feat') || contains(github.event.head_commit.message, 'refactor')
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: zendesk_app
    
    outputs:
      version: ${{ steps.get_version.outputs.version }}
      bumped: ${{ steps.bump_version.outputs.bumped }}

    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.RELEASE_PLEASE_TOKEN }}
      
      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20.x'
          cache: 'npm'
          cache-dependency-path: zendesk_app/package-lock.json

      - name: Install ZCLI
        run: npm i @zendesk/zcli -g

      - name: Install jq
        run: sudo apt-get install jq

      - name: Get current version
        id: current_version
        run: |
          VERSION=$(node -p "require('./src/manifest.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Bump Version
        id: bump_version
        run: |
          if [[ "${{ github.event.head_commit.message }}" == *"fix"* ]]; then
            cd src && zcli apps:bump -p
            echo "bumped=true" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.head_commit.message }}" == *"feat"* ]]; then
            cd src && zcli apps:bump -m
            echo "bumped=true" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.head_commit.message }}" == *"refactor"* ]]; then
            cd src && zcli apps:bump -r
            echo "bumped=true" >> $GITHUB_OUTPUT
          fi

      - name: Sync version to root manifest
        if: steps.bump_version.outputs.bumped == 'true'
        run: |
          VERSION=$(node -p "require('./src/manifest.json').version")
          MANIFEST=$(cat manifest.json)
          echo "$MANIFEST" | jq ".version = \"$VERSION\"" > manifest.json

      - name: Get final version
        id: get_version
        if: steps.bump_version.outputs.bumped == 'true'
        run: |
          VERSION=$(node -p "require('./src/manifest.json').version")
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Commit and push changes
        if: steps.bump_version.outputs.bumped == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.RELEASE_PLEASE_TOKEN }}
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git remote set-url origin https://x-access-token:${GITHUB_TOKEN}@github.com/${GITHUB_REPOSITORY}.git
          git add -A
          git commit -m "Bump version from ${{ steps.current_version.outputs.version }} to ${{ steps.get_version.outputs.version }}"
          git push origin main 